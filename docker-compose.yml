version: '3.7'
services:

# API basé sur le framework python flask
  flask-api:
    build: flask-api
    image: flask-api:latest
    container_name: flask-api
    environment:
      - "TZ=Europe/Paris"
    ports:
        - "5000:5000"
    depends_on:
      - db
    healthcheck:
      test: "curl -f http://flask-api:5000/api/v1/ping || exit 1"
      interval: 10s
      timeout: 3s
      retries: 50
    networks:
      bridged:
        ipv4_address: 172.16.1.202
# Front basé sur le framework python flask
  flask-front:
    build: flask-front
    image: flask-front:latest
    container_name: flask-front
    environment:
      - "TZ=Europe/Paris"
    ports:
        - "5001:5001"
    depends_on:
      - flask-api
    healthcheck:
      test: "curl -f http://flask-front:5001/api || exit 1"
      interval: 10s
      timeout: 3s
      retries: 50
    networks:
      bridged:
        ipv4_address: 172.16.1.203

  db:
    # build: mydb
    # image: mydb:latest
    image: mariadb:latest
    container_name: mydb
    environment:
      - "TZ=Europe/Paris"
      - "MYSQL_ROOT_PASSWORD=root"
      - "MYSQL_DATABASE=mydb"
    ports:
        - "3306:3306"
    volumes:
        - ./data/db/config:/etc/mysql/conf.d
        - ./data/db/data:/var/lib/mysql
    healthcheck:
      test: "nc -zv localhost 3306 || exit 1"
      interval: 10s
      timeout: 3s
      retries: 50
    networks:
      bridged:
        ipv4_address: 172.16.1.201
# Nginx front API & web ui
  proxy-front:
    build: nginx-front
    image: proxy-front:latest
    container_name: proxy-front
    environment:
      - "TZ=Europe/Paris"
    ports:
      - "80:80"
    depends_on:
      - flask-api
      #- php-fpm
      #- graylog
    volumes:
      - ./nginx-front/src/vhost.conf:/etc/nginx/conf.d/default.conf
      - ./nginx-front/src/nginx.conf:/etc/nginx/nginx.conf
      - ./data/front/html:/var/www/html
    healthcheck:
      test: "curl -f http://localhost/api/v1/ping || exit 1"
      interval: 10s
      timeout: 3s
      retries: 50
    #logging:
        #driver: gelf
        #options:
            #gelf-address: "udp://172.16.1.202:12401"
            #tag: nginx-front
    networks:
      bridged:
        ipv4_address: 172.16.1.200

# Php-fpm
#  php-fpm:
#    build: php-fpm
#    image: php-fpm:latest
#    container_name: php-fpm
#    ports:
#      - "9000:9000"
#    volumes:
#      - ./data/front/html:/var/www/html
#    networks:
#      bridged:
#        ipv4_address: 172.16.1.203
#
#  mongodb:
#    image: mongo:3
#    container_name: mongodb
#    networks:
#      bridged:
#        ipv4_address: 172.16.1.204
#
# Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/6.x/docker.html
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.2
#    container_name: elasticsearch
#    environment:
#      - http.host=0.0.0.0
#      - transport.host=localhost
#      - network.host=0.0.0.0
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    #mem_limit: 1g
#    ports:
#      # Expose for grafana data source
#      - 9200:9200
#    networks:
#      bridged:
#        ipv4_address: 172.16.1.205
#
# Graylog: https://hub.docker.com/r/graylog/graylog/
#  graylog:
#    build: graylog
#    image: graylog:latest
#    container_name: graylog
#    environment:
#      # CHANGE ME (must be at least 16 characters)!
#      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
#      # Password: admin
#      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
#      - GRAYLOG_HTTP_EXTERNAL_URI=http://0.0.0.0:9002/
#      - GRAYLOG_TIMEZONE=Europe/Paris
#    links:
#      - mongodb:mongo
#      - elasticsearch
#    depends_on:
#      - mongodb
#      - elasticsearch
#    ports:
#      # Graylog web interface and REST API
#      - 9002:9000
#      # Syslog TCP
#      #- 1514:1514
#      # Syslog UDP
#      #- 1514:1514/udp
#      # GELF TCP
#      #- 12401:12401
#      # GELF UDP
#      - 12401:12401/udp
#    networks:
#      bridged:
#        ipv4_address: 172.16.1.202
#
# Grafana dashboard
#  grafana:
#    build: grafana
#    image: grafana/grafana:latest
#    container_name: "grafana"
#    volumes:
#      - ./grafana/provisioning/:/etc/grafana/provisioning/
#    ports:
#      - 3000:3000
#    networks:
#      bridged:
#        ipv4_address: 172.16.1.206
#
# Portainer
#  portainer:
#    image: portainer/portainer
#    container_name: "portainer"
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - ./data/portainer/data/:/data/
#    ports:
#      - "9001:9000"
#    networks:
#      bridged:
#        ipv4_address: 172.16.1.50

networks:
  bridged:
    name: bridged-net
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.1.0/16
